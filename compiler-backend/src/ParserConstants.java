public interface ParserConstants
{
    int START_SYMBOL = 36;

    int FIRST_NON_TERMINAL    = 36;
    int FIRST_SEMANTIC_ACTION = 71;

    int[][] PARSER_TABLE =
    {
        { -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1, -1, -1, -1 },
        { -1, -1, -1,  3,  2, -1, -1, -1, -1,  2,  2,  2,  2, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1 },
        { -1, -1, -1, -1,  5, -1, -1, -1, -1,  5,  5,  5,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  6, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  7,  8, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 11, -1, -1, -1, -1,  9, 10, 10, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, 14 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, 16, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, -1, 17 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, 18 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 22, 22, -1, -1, -1, -1, -1, -1, -1, -1, 22, -1, -1, -1, -1, 22, 22, -1, -1, -1, -1, -1, 22, -1, 22, 22, 22, 22 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, 24, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 26, -1, -1, -1, -1, 26, 26, 26, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 27, -1, -1, -1 },
        { -1, -1, -1, 29, 28, 29, 29, -1, -1, 28, 28, 28, 28, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1 },
        { -1, -1, -1, 31, -1, 30, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, 33, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 40, 40, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, 40, 40, -1, -1, -1, -1, -1, 40, -1, 40, 40, 40, 40 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, 39, 39, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, 41, -1, -1, -1, -1, 41, 41, 41, 41, -1, -1, 42, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, 41, -1, -1, 41, 41, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, 46, 45, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, 44, 44, -1, -1, -1, -1, -1, 44, -1, 44, 44, 44, 44 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, -1, -1, -1, -1, -1, 48, -1, 48, 48, 48, 48 },
        { -1, -1, -1, -1, 49, -1, -1, -1, -1, 49, 49, 49, 49, -1, -1, 49, 49, -1, 50, 50, 50, 50, -1, -1, -1, -1, 49, 49, -1, -1, 49, 49, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 52, 53, 54, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, -1, -1, -1, -1, -1, 55, -1, 55, 55, 55, 55 },
        { -1, -1, -1, -1, 56, -1, -1, -1, -1, 56, 56, 56, 56, -1, -1, 56, 56, -1, 56, 56, 56, 56, 57, 58, -1, -1, 56, 56, -1, -1, 56, 56, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 59, -1, -1, -1, -1, -1, 59, -1, 59, 59, 59, 59 },
        { -1, -1, -1, -1, 60, -1, -1, -1, -1, 60, 60, 60, 60, -1, -1, 60, 60, -1, 60, 60, 60, 60, 60, 60, 61, 62, 60, 60, -1, -1, 60, 60, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 68, 69, -1, -1, -1, -1, -1, 67, -1, 63, 65, 64, 66 }
    };

    int[][] PRODUCTIONS = 
    {
        { 171,   3,  37,   4, 172 },
        {  39,  38 },
        {  37 },
        {   0 },
        {  40,  28 },
        {  42,  28 },
        {  59,  41 },
        { 173 },
        {  29,  58, 174 },
        {  43 },
        {  48 },
        {  51 },
        {  56 },
        {  10,  30,  44,  31 },
        {  46,  45 },
        {  27,  44 },
        {   0 },
        {  47,  32, 176 },
        {  35, 177,  27 },
        {   0 },
        {  11,  30,  49,  31 },
        {  12,  30,  49,  31, 178 },
        {  58, 179,  50 },
        {  27,  49 },
        {   0 },
        {   5,  58, 180,  52,  54, 181,  55, 182,   4 },
        {  42,  28,  53 },
        {  59,  29,  58,  28,  53 },
        {  52 },
        {   0 },
        { 181,   6,  58, 183,  52,  54 },
        {   0 },
        {   7,  52 },
        {   0 },
        { 184,  13,  52,  57 },
        {  15,  58, 185 },
        {  14,  58, 186 },
        {  32, 175,  60 },
        {  27,  59 },
        {   0 },
        {  62,  61 },
        {   0 },
        {  16,  62, 187,  61 },
        {  17,  62, 188,  61 },
        {  63 },
        {   9, 189 },
        {   8, 190 },
        {  18,  62, 191 },
        {  66,  64 },
        {   0 },
        {  65, 192,  66, 193 },
        {  19 },
        {  20 },
        {  21 },
        {  22 },
        {  68,  67 },
        {   0 },
        {  23,  68, 194,  67 },
        {  24,  68, 195,  67 },
        {  70,  69 },
        {   0 },
        {  25,  70, 196,  69 },
        {  26,  70, 197,  69 },
        {  32, 198 },
        {  34, 199 },
        {  33, 200 },
        {  35, 201 },
        {  30,  58,  31 },
        {  23,  70 },
        {  24,  70, 202 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "EOF", // Era esperado fim de programa
        "reservada", // Era esperado reservada
        "main", // Era esperado main
        "end", // Era esperado end
        "if", // Era esperado if
        "elif", // Era esperado elif
        "else", // Era esperado else
        "false", // Era esperado false
        "true", // Era esperado true
        "read", // Era esperado read
        "write", // Era esperado write
        "writeln", // Era esperado writeln
        "repeat", // Era esperado repeat
        "until", // Era esperado until
        "while", // Era esperado while
        "\"&&\"", // Era esperado "&&"
        "\"||\"", // Era esperado "||"
        "\"!\"", // Era esperado "!"
        "\"==\"", // Era esperado "=="
        "\"!=\"", // Era esperado "!="
        "\"<\"", // Era esperado "<"
        "\">\"", // Era esperado ">"
        "\"+\"", // Era esperado "+"
        "\"-\"", // Era esperado "-"
        "\"*\"", // Era esperado "*"
        "\"/\"", // Era esperado "/"
        "\",\"", // Era esperado ","
        "\";\"", // Era esperado ";"
        "\"=\"", // Era esperado "="
        "\"(\"", // Era esperado "("
        "\")\"", // Era esperado ")"
        "id", // Era esperado id
        "constante_float", // Era esperado constFloat
        "constante_int", // Era esperado constInt
        "constante_string", // Era esperado constString
        "<programa>", // <programa> inválido
        "<lista_instrucoes>", // <lista_instrucoes> inválido
        "<lista_instrucoes1>", // <lista_instrucoes1> inválido
        "<instrucao>", // <instrucao> inválido
        "<declaracao_variavel>", // <declaracao_variavel> inválido
        "<declaracao_variavel2>", // <declaracao_variavel2> inválido
        "<comando>", // <comando> inválido
        "<comando_entrada>", // <comando_entrada> inválido
        "<lista_entrada>", // <lista_entrada> inválido
        "<lista_entrada2>", // <lista_entrada2> inválido
        "<entrada>", // <entrada> inválido
        "<pergunta>", // <pergunta> inválido
        "<comando_saida>", // <comando_saida> inválido
        "<lista_expressoes>", // <lista_expressoes> inválido
        "<lista_expressoes2>", // <lista_expressoes2> inválido
        "<comando_selecao>", // <comando_selecao> inválido
        "<lista_comandos>", // <lista_comandos> inválido
        "<lista_comandos2>", // <lista_comandos2> inválido
        "<elif>", // <elif> inválido
        "<else>", // <else> inválido
        "<comando_repeticao>", // <comando_repeticao> inválido
        "<comando_repeticao2>", // <comando_repeticao2> inválido
        "<expressao>", // <expressao> inválido
        "<lista_id>", // <lista_id> inválido
        "<lista_id2>", // <lista_id2> inválido
        "<expressao1>", // <expressao1> inválido
        "<elemento>", // <elemento> inválido
        "<relacional>", // <relacional> inválido
        "<relacional1>", // <relacional1> inválido
        "<operador_relacional>", // <operador_relacional> inválido
        "<aritmetica>", // <aritmetica> inválido
        "<aritmetica1>", // <aritmetica1> inválido
        "<termo>", // <termo> inválido
        "<termo1>", // <termo1> inválido
        "<fator>" // <fator> inválido
    };
}
